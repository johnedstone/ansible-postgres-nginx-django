---
- name: set up app directory
  become: yes
  ansible.builtin.file:
    path: "{{ path_to_app }}"
    state: directory
    mode: 0775
    owner: "{{ USER }}"
    group: "{{ USER }}"

- name: install gunicorn hello_world
  copy:
    src: hello_world.py
    dest: "{{ path_to_app }}/hello_world.py"

- name: install gunicorn
  pip:
    name: gunicorn
      #virtualenv_python: "{{ item.value.which_python }}"
      #virtualenv_command: "{{ item.value.whereis_virtualenv }}"
    virtualenv: "{{ path_to_app }}/venv"

- name: Create gunicorn logging directories
  become: yes
  file:
    path: "/var/log/gunicorn_{{ app_name }}"
    state: directory
    mode: 0775
    owner: "{{ USER }}"
    group: "{{ USER }}"

- name: Enable logrotate gunicorn apps
  become: yes
  template:
    src: logrotate.j2
    dest: "/etc/logrotate.d/gunicorn_{{ app_name }}"
#
#- name: Configure gunicorn sysconfig
#  become: yes
#  template:
#    src: systemd/gunicorn_sysconfig.j2
#    dest: "/etc/default/gunicorn_{{ item.key }}"
#  loop: "{{ APPs | dict2items }}"
#  when: item.value.using_gunicorn is defined and item.value.using_gunicorn
#  notify:
#    - Restart gunicorn service
#    - Restart gunicorn socket
#    - Restart bitnami apps
#
#- name: install gunicorn helper.sh for first migration
#  become: yes
#  template:
#    src: gunicorn_helper.sh.j2
#    dest: "/opt/bitnami/apps/{{ item.key }}/config/helper.sh"
#    owner: bitnami
#    group: bitnami
#    mode: 0440
#  loop: "{{ APPs | dict2items }}"
#  when: item.value.using_gunicorn is defined and item.value.using_gunicorn
#
#- name: create systemd gunicorn socket file
#  become: yes
#  template:
#    src: templates/systemd/gunicorn_socket.j2
#    dest: "/usr/lib/systemd/system/gunicorn_{{ item.key }}.socket"
#  loop: "{{ APPs | dict2items }}"
#  when: item.value.using_gunicorn is defined and item.value.using_gunicorn
#  notify:
#    - Restart gunicorn service
#    - Restart gunicorn socket
#    - Restart bitnami apps
#
#- name: create systemd gunicorn service file
#  become: yes
#  template:
#    src: templates/systemd/gunicorn_service.j2
#    dest: "/usr/lib/systemd/system/gunicorn_{{ item.key }}.service"
#  loop: "{{ APPs | dict2items }}"
#  when: item.value.using_gunicorn is defined and item.value.using_gunicorn
#  notify:
#    - Restart gunicorn service
#    - Restart gunicorn socket
#    - Restart bitnami apps
#
#- name: gunicorn enable & start
#  become: yes
#  service:
#    name: "gunicorn_{{ item.key }}"
#    enabled: yes
#    state: started
#  loop: "{{ APPs | dict2items }}"
#  when: item.value.using_gunicorn is defined and item.value.using_gunicorn
#
## https://bitbucket.org/johnedstone-for-sure/nas-home-dir-oidc/src/master/rest_api/playbooks/nas_home_dir_restapi/roles/nginx_rest_api/templates/prod_settings.py.j2
#
#
#
# vim: ai et ts=2 sw=2 sts=2 nu
